@page "/login"
@inject UserApiService UserService
@inject NavigationManager Navigation
@using MessengerClient.Services;
@using MessengerClient.Models;

<div class="container d-flex justify-content-center align-items-center vh-100">
    <div class="login-card col-md-5">
        <h2 class="text-center mb-4">Welcome back</h2>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }  

        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText @bind-Value="loginModel.Email" class="form-control" />
            </div>

            <div class="mb-3">
                    <label class="form-label">Password</label>
                    <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Log In</button>
        </EditForm>

    </div>
</div>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <p style="color:red">@errorMessage</p>
}



@code{
    private LoginDTO loginModel = new();
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        var result = await UserService.LoginAsync(loginModel);
        if (result is not null)
        {
            // сохраняем токен
            Console.WriteLine("TOKEN:" + result.Token);
            Navigation.NavigateTo("/"); // редирект на главную
        }
        else
        {
            errorMessage = "Login failed";
        }
    }
}