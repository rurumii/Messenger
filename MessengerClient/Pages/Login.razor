@page "/"
@inject UserApiService UserService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using MessengerClient.Services;
@using MessengerClient.Models;


<div class="login-screen">
    <div class="login-content">
        <img src="img/logo_final.svg" alt="Logo" class="logo">

        <h2 class="welcome-title">Welcome!</h2>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger">@errorMessage</div>
        }  

        <EditForm Model="loginModel" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label class="form-label">Email</label>
                <InputText @bind-Value="loginModel.Email" class="form-control" />
            </div>

            <div class="mb-3">
                <label class="form-label">Password</label>
                <InputText @bind-Value="loginModel.Password" type="password" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary w-100">Log In</button>
            <p class="text-center">
                No account?
                <a href="/register">Register</a>
            </p>

        </EditForm>

    </div>  
</div>


@code{
    private LoginDTO loginModel = new();
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        var result = await UserService.LoginAsync(loginModel);
        if (result is not null)
        {
            // сохраняем токен
            await JSRuntime.InvokeVoidAsync("localStorage.setItem", "authToken", result.Token);

            Console.WriteLine("TOKEN: " + result.Token);
            Navigation.NavigateTo("/"); // редирект на главную
        }
        else
        {
            errorMessage = "Login failed";
        }
    }
}